// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Board {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String
  imageFullUrl  String
  imageUserName String
  imageLinkHTML String
  lists         List[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model List {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  boardId   String   @db.ObjectId
  board     Board    @relation(fields: [boardId], references: [id])
  cards     Card[]
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  order       Int
  description String?
  listId      String   @db.ObjectId
  list        List     @relation(fields: [listId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  orgId       String
  action      ACTION
  entityId    String
  entityType  ENTITY_TYPE
  entityTitle String
  userId      String
  userImage   String
  userName    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrgLimit {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  orgId String   @unique
  count Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgSubscription {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  orgId String   @unique
  stripeCustomerId       String?   @unique
  stripeSubscriptionId   String?   @unique
  stripePriceId          String?
  stripeCurrentPeriodEnd DateTime?
}
